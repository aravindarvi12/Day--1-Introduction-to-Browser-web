Write a blog on Difference between HTTP1.1 vs HTTP2

HTTP1.1

The Hypertext transfer protocal, or HTTP, is an application protocol that has been the defacto standard for communication 
on the world wide web since its invention in 1989. Form the release of HTTP/1.1 in 1997 until recently, there have been few	
revisions to the protocol.

HTTP 2  

HTTP/2 (originally named HTTP/2.0) is a major revision of the HTTP network protocol used by the World Wide Web. It was derived from the earlier experimental SPDY protocol, originally developed by Google.[1][2] HTTP/2 was developed by the HTTP Working Group (also called httpbis, where "bis" means "twice") of the Internet Engineering Task Force (IETF).
[3][4][5] HTTP/2 is the first new version of HTTP since HTTP/1.1, which was standardized in RFC 2068 in 1997

Difference between HTTP/1.1 VS HTTP 2

                            HTTP 1.1                                                     HTTP 2

1.It works on the textual format.                                           1.It works on the binary protocol.
2.There is head of line blocking that blocks all the requests               2.It allows multiplexing so one TCP connection
 behind it until it doesn’t get its all resources.                            is required for multiple requests.
3.It uses requests resource Inlining for use getting multiple pages         3.It uses PUSH frame by server that collects all multiple pages
4.It compresses data by itself.                                             4.It uses HPACK for data compression.
-------------------------------------------------------------------------------------------------------------------------------------------------

Blog about objects and its internal representation in Javascript

Objects are important data types in javascript. Objects are different than primitive datatypes (i.e. number, string, boolean, etc.). Primitive data types contain one value but Objects can hold many values in form of Key: value pair. These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.

Objects, in JavaScript, is it’s most important data-type and forms the building blocks for modern JavaScript. These objects are quite different from JavaScript’s primitive data-types(Number, String, Boolean, null, undefined and symbol) in the sense that while these primitive data-types all store a single value each (depending on their types).

Objects are more complex and each object may contain any combination of these primitive data-types as well as reference data-types.
An object, is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value. That reference or pointer points to the location in memory where the object is stored. The variables don’t actually store the value.

Loosely speaking, objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of “key: value” pairs. These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.

Objects and properties
A JavaScript object has properties associated with it. A property of an object can be explained as a variable that is attached to the object.
Object properties are basically the same as ordinary JavaScript variables, except for the attachment to objects. The properties of an object define the characteristics of the object. You access the properties of an object with a simple dot-notation:   

-----------------------------------------------------------------------------------------------------------------------------------------------------

IP ADDRESS

IP Address

An IP address is a unique numerical label assigned to each device connected to a computer network, such as the internet. It acts as a virtual address that allows devices to communicate and identify each other on the network. There are two main versions of IP addresses:

IPv4: The older version, consisting of four sets of numbers between 0 and 255, separated by periods (e.g., 192.168.1.1).
IPv6: The newer version, with a more complex format using hexadecimal numbers and colons (e.g., 2001:0db8:85a3:0000:0000:8a2e:0370:7334).
-------------------------------------------------------------------------------------------------------------------------------------------------------

Port

A port is a virtual communication channel associated with an IP address. It allows different applications or services running on the same device to receive and send data independently. Imagine an IP address as a building with multiple doors (ports), each leading to a specific apartment (application or service). Common port numbers include:

80: HTTP (web traffic)
443: HTTPS (secure HTTP)
21: FTP (file transfer)
25: SMTP (email)

---------------------------------------------------------------------------------------------------------------------------------------------------
HTTP Methods

HTTP methods are specific commands sent within an HTTP request to instruct the server on how to handle the request. These methods define the desired action on the server-side, such as retrieving data, creating new resources, or updating existing ones. Some common HTTP methods include:

GET: Retrieves data from the server, often used for fetching web pages or resources.
POST: Submits data to the server, typically used for submitting forms or creating new data.
PUT: Updates existing data on the server.
DELETE: Removes data from the server.
PATCH: Applies partial modifications to data on the server.
------------------------------------------------------------------------------------------------------------------------------------------------------

MAC Address

A MAC address (Media Access Control address) is a unique hardware identifier assigned to each network interface card (NIC) in a device. It’s used at the data link layer of the OSI model to ensure proper delivery of data frames within a local network segment. Unlike IP addresses, which can be dynamic and change, MAC addresses are typically burned into the hardware and remain static.

----------------------------------------------------------------------------------------------------------------------------------------------------
 